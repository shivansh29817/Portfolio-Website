@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 220 20% 1%;
    --foreground: 0 0% 95%;

    --card: 220 20% 4%;
    --card-foreground: 0 0% 95%;

    --popover: 220 15% 8%;
    --popover-foreground: 0 0% 95%;

    --primary: 280 100% 70%;
    --primary-foreground: 220 15% 3%;

    --secondary: 220 20% 6%;
    --secondary-foreground: 0 0% 95%;

    --muted: 220 20% 6%;
    --muted-foreground: 220 5% 65%;

    --accent: 45 100% 65%;
    --accent-foreground: 220 15% 3%;

    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 95%;

    --border: 220 20% 8%;
    --input: 220 20% 8%;
    --ring: 280 100% 70%;

    --radius: 1rem;

    /* 3D Glass morphism variables */
    --glass-bg: 220 20% 4% / 0.4;
    --glass-border: 0 0% 95% / 0.08;
    --glass-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.8);
    --glass-glow: 0 0 80px rgb(168 85 247 / 0.4);

    /* 3D Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(280 100% 70%) 0%, hsl(300 100% 60%) 100%);
    --gradient-secondary: linear-gradient(135deg, hsl(45 100% 65%) 0%, hsl(280 100% 70%) 100%);
    --gradient-hero: radial-gradient(ellipse at center, hsl(220 20% 4%) 0%, hsl(220 25% 1%) 100%);
    --gradient-mesh: 
      radial-gradient(at 40% 20%, hsl(280 100% 70% / 0.15) 0px, transparent 50%),
      radial-gradient(at 80% 0%, hsl(45 100% 65% / 0.1) 0px, transparent 50%),
      radial-gradient(at 0% 50%, hsl(300 100% 60% / 0.1) 0px, transparent 50%);

    /* 3D Animation variables */
    --transition-smooth: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-spring: all 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    --transition-3d: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);

    --radius: 1rem;

    --sidebar-background: 0 0% 98%;

    --sidebar-foreground: 240 5.3% 26.1%;

    --sidebar-primary: 240 5.9% 10%;

    --sidebar-primary-foreground: 0 0% 98%;

    --sidebar-accent: 240 4.8% 95.9%;

    --sidebar-accent-foreground: 240 5.9% 10%;

    --sidebar-border: 220 13% 91%;

    --sidebar-ring: 217.2 91.2% 59.8%;
  }

  .dark {
    /* Keep same dark theme as root for consistency */
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground overflow-x-hidden;
    background: var(--gradient-hero);
    background-attachment: fixed;
    position: relative;
  }

  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--gradient-mesh);
    pointer-events: none;
    z-index: 0;
  }

  body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(ellipse at center, transparent 30%, rgba(0, 0, 0, 0.4) 70%, rgba(0, 0, 0, 0.8) 100%);
    pointer-events: none;
    z-index: 1;
  }

  html {
    scroll-behavior: smooth;
  }
}

@layer components {
  .glass-card {
    @apply relative;
    background: hsla(var(--glass-bg));
    backdrop-filter: blur(20px);
    border: 1px solid hsla(var(--glass-border));
    box-shadow: var(--glass-shadow);
    transform-style: preserve-3d;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .glass-card:hover {
    transform: translateY(-8px) rotateX(2deg);
    box-shadow: var(--glass-shadow), var(--glass-glow);
  }

  .glass-card-no-shadow {
    @apply relative;
    background: hsla(var(--glass-bg) / 0);
    backdrop-filter: blur(0px);
    border: 1px solid hsla(var(--glass-border) / 0);
    box-shadow: none;
    transform-style: preserve-3d;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .glass-card-glass-only {
    @apply relative;
    background: hsla(var(--glass-bg) / 0.8);
    backdrop-filter: blur(20px);
    border: 1px solid hsla(var(--glass-border) / 0.8);
    box-shadow: none;
    transform-style: preserve-3d;
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .glass-button {
    @apply glass-card px-6 py-3 rounded-full font-medium relative overflow-hidden;
    background: hsla(var(--primary) / 0.1);
    border: 1px solid hsla(var(--primary) / 0.3);
    color: hsl(var(--primary));
    transition: var(--transition-smooth);
  }

  .glass-button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, hsla(var(--primary) / 0.4), transparent);
    transition: left 0.5s;
  }

  .glass-button:hover::before {
    left: 100%;
  }

  .glass-button:hover {
    background: hsla(var(--primary) / 0.2);
    border: 1px solid hsla(var(--primary) / 0.5);
    transform: translateY(-2px);
    box-shadow: 0 10px 40px hsla(var(--primary) / 0.4);
  }

  .hero-title {
    background: var(--gradient-secondary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    filter: drop-shadow(0 0 40px hsla(var(--primary) / 0.5));
  }

  .section-padding {
    @apply px-6 lg:px-16 py-16 lg:py-24 relative z-10;
  }

  .floating {
    animation: float 8s ease-in-out infinite;
  }

  .floating-slow {
    animation: float 12s ease-in-out infinite reverse;
  }

  .glow-effect {
    box-shadow: 0 0 30px hsla(var(--primary) / 0.6);
    transition: var(--transition-smooth);
  }

  .glow-effect:hover {
    box-shadow: 0 0 50px hsla(var(--primary) / 0.8);
    transform: scale(1.05);
  }

  .card-3d {
    @apply glass-card;
    perspective: 1000px;
    transform-style: preserve-3d;
  }

  .card-3d-inner {
    transition: transform 0.6s;
    transform-style: preserve-3d;
  }

  .card-3d:hover .card-3d-inner {
    transform: rotateY(5deg) rotateX(5deg);
  }

  .beam-light {
  position: absolute;
  bottom: -20px;
  left: 50%;
  transform: translateX(-50%);
  width: 80%;
  height: 3px;
  background: linear-gradient(
    to right,
    transparent,
    hsla(var(--primary) / 0.3),
    hsla(var(--primary) / 0.8),
    hsla(var(--primary) / 0.6),
    hsla(var(--primary) / 0.8),
    hsla(var(--primary) / 0.3),
    transparent
  );
  filter: blur(1px);
  z-index: 1;
  animation: pulse 3s ease-in-out infinite;
  overflow: hidden;
}

.beam-light::after {
  content: '';
  position: absolute;
  top: 0;
  left: 100%;
  width: 30%;
  height: 100%;
  background: linear-gradient(
    to right,
    transparent,
    hsla(var(--accent) / 0.8),
    hsla(var(--accent) / 1),
    hsla(var(--accent) / 0.8),
    transparent
  );
  animation: goldSweep 6s ease-in-out infinite;
}

@keyframes goldSweep {
  0% {
    left: 100%;
  }
  50% {
    left: -30%;
  }
  100% {
    left: 100%;
  }
}

  .mesh-gradient {
    background: var(--gradient-mesh);
    opacity: 0.3;
  }
}

@layer utilities {
  .text-gradient {
    background: var(--gradient-secondary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
}

@keyframes float {
  0%, 100% { transform: translateY(0px) rotateZ(0deg); }
  25% { transform: translateY(-10px) rotateZ(1deg); }
  50% { transform: translateY(-20px) rotateZ(0deg); }
  75% { transform: translateY(-10px) rotateZ(-1deg); }
}

@keyframes pulse-beam {
  0%, 100% { 
    opacity: 0.6;
    transform: translateX(-50%) scaleY(1);
  }
  50% { 
    opacity: 1;
    transform: translateX(-50%) scaleY(1.1);
  }
}

@keyframes glow-pulse {
  0%, 100% { 
    box-shadow: 0 0 20px hsla(var(--primary) / 0.3);
  }
  50% { 
    box-shadow: 0 0 40px hsla(var(--primary) / 0.6), 0 0 80px hsla(var(--accent) / 0.4);
  }
}